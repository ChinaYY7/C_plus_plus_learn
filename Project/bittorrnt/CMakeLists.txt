CMAKE_MINIMUM_REQUIRED(VERSION 3.10)

PROJECT(BitTorrent)
OPTION(DEBUG "option for debug" ON)

MESSAGE(STATUS "### Begin to Configure Project BitTorrent ###")

# 检测cmake运行操作系统/CPU/编译器
MESSAGE(STATUS "    Generator: ${CMAKE_GENERATOR}")
MESSAGE(STATUS "    Building OS: ${CMAKE_SYSTEM_NAME}")
MESSAGE(STATUS "    Building Processor: ${CMAKE_SYSTEM_PROCESSOR}")
MESSAGE(STATUS "    Compiler: ${CMAKE_C_COMPILER_ID}")

# 编译模式，Release/Debug，-DCMAKE_BUILD_TYPE=Release|Debug
IF (NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE Debug) # Debug Release
ENDIF()
STRING(TOLOWER "${CMAKE_BUILD_TYPE}" CMAKE_BUILD_TYPE)
IF (DEBUG)
    SET(CMAKE_BUILD_TYPE Debug)
    ADD_DEFINITIONS(-DDEBUG)
ELSE()
    SET(CMAKE_BUILD_TYPE Release)
ENDIF()
MESSAGE(STATUS "    Building mode: ${CMAKE_BUILD_TYPE}")

# 设置编译结果输出路径
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${PROJECT_BINARY_DIR}/bin")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${PROJECT_BINARY_DIR}/bin")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG "${PROJECT_BINARY_DIR}/lib")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE "${PROJECT_BINARY_DIR}/lib")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG "${PROJECT_BINARY_DIR}/lib")
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE "${PROJECT_BINARY_DIR}/lib")

# 设置编译参数
SET(CMAKE_CXX_FLAGS                   "-Wall -Wno-format-security -std=\"c++11\"")
SET(CMAKE_CXX_FLAGS_DEBUG             "-g -DDEBUG")
SET(CMAKE_CXX_FLAGS_RELEASE           "-O3 -fno-strict-aliasing")
SET(CMAKE_CXX_FLAGS_MINSIZEREL        "-Os")
SET(CMAKE_CXX_RELWITHDEBINFO_RELEASE  "-O2")

ADD_SUBDIRECTORY(src)

MESSAGE(STATUS "### Done ###")
